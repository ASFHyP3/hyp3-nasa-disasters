# This script generates the batch files for the three services generated from the watermap products
# then runs them in sequence

import os
from datetime import date, timedelta
import arcpy

import keyring
pw = keyring.get_password("portal_creds", "hkristenson_ASF")
arcpy.SignInToPortal(r'https://asf-daac.maps.arcgis.com/', 'hkristenson_ASF', pw)

os.chdir(r'C:\Users\hjkristenson\PycharmProjects\hyp3-nasa-disasters\image_server\nasa_disasters_hkh\batchFiles')

today = str(date.today().strftime("%y%m%d"))
s3tag = 'HKHwatermaps'
projtag = 'HKH'
crftag_wm = projtag+'_WatermapExtent'
crftag_rgb = projtag+'_RGB'
crftag_rtc = projtag+'_RTC'

# create AID packages
import arcpy
arcpy.ImportToolbox(r"C:\Users\ASF\Documents\COVID19\Disasters\Esri\AID_GPtools\AID_Management.pyt")
gdb = r'C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\MosaicDatasets''\\'+projtag+'\\'+projtag+'_'+today+'.gdb'

print('Generating watermap extent AID package...')
md_wm = gdb+'\\'+'watermap_extent'
aid_wm = r'C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\AID_Packages\HKH_WatermapExtent_'+today+'.zmd'

# clip mosaic dataset to boundary
extent_mask = r'C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\Watermaps.gdb\HKH_ServiceExtentMask'
arcpy.management.ImportMosaicDatasetGeometry(md_wm, "BOUNDARY", "OBJECTID", extent_mask, "FID")
print('Clipped mosaic dataset to reference shapefile.')

with arcpy.EnvManager(scratchWorkspace=r"C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\Watermaps.gdb", workspace=r"C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\Watermaps.gdb"):
    try:
        arcpy.AID.AIDISDP(md_wm, aid_wm, None)
    except:
        print("AID errors generated and ignored.")
        pass
print('Watermap extent AID package complete.')

# print('Generating RGB AID package...')
# md_rgb = gdb+'\\'+'rgb'
# aid_rgb = r'C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\AID_Packages\HKH_RGB_'+today+'.zmd'
# with arcpy.EnvManager(scratchWorkspace=r"C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\Watermaps.gdb", workspace=r"C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\Watermaps.gdb"):
#     try:
#         arcpy.AID.AIDISDP(md_rgb, aid_rgb, None)
#     except:
#         print("AID errors generated and ignored.")
#         pass
# print('RGB AID package complete.')
#
# print('Generating RTC AID package...')
# md_rtc = gdb+'\\'+'sar_comp'
# aid_rtc = r'C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\AID_Packages\HKH_RTC_'+today+'.zmd'
# with arcpy.EnvManager(scratchWorkspace=r"C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\Watermaps.gdb", workspace=r"C:\Users\ASF\Documents\COVID19\Disasters\Watermaps\Watermaps.gdb"):
#     try:
#         arcpy.AID.AIDISDP(md_rtc, aid_rtc, None)
#     except:
#         print("AID errors generated and ignored.")
#         pass
# print('RTC AID package complete.')

# update image services
print('Updating Watermap Extent Image Service...')
arcpy.AID.MAIDIS("asf-daac", "Update Service", "HKH", "None", "HKH_Watermap_Extent", None, aid_wm, "Dedicated Instance", "Watermap Extent products generated from Sentinel-1 SAR imagery over flood-prone regions in the Hindu Kush Himalayan (HKH) region for the 2021 monsoon season, generated by ASF.", "Imagery products processed by ASF DAAC HyP3 2021 using GAMMA software. Contains modified Copernicus Sentinel data 2021, processed by ESA.", '', False, False, True, None, None, None, None)
print('Watermap Extent Image Service updated.')
# print('Updating RGB Image Service...')
# arcpy.AID.MAIDIS("asf-daac", "Update Service", "HKH", "None", "HKH_RGB", None, aid_rgb, "Dedicated Instance", "Sentinel-1 RGB Decomposition of RTC VV and VH imagery over the Hindu Kush Himalayan (HKH) region for the 2021 monsoon season, starting May 16, 2021. Blue areas have low returns in VV and VH (smooth surfaces such as calm water, but also frozen/crusted soil or dry sand), Green areas have high returns in VH (volume scatterers such as vegetation or some types of snow/ice), and Red areas have relatively high VV returns and relatively low VH returns (such as urban or sparsely vegetated areas).", "Imagery products processed by ASF DAAC HyP3 2021 using GAMMA software. Contains modified Copernicus Sentinel data 2021, processed by ESA.", '', False, False, True, None, None, None, None)
# print('RGB Image Service updated.')
# print('Updating RTC Image Service...')
# arcpy.AID.MAIDIS("asf-daac", "Update Service", "HKH", "None", "HKH_RTC", None, aid_rtc, "Dedicated Instance", "Radiometric Terrain Corrected (RTC) products generated from Sentinel-1 SAR imagery over flood-prone regions in the Hindu Kush Himalayan (HKH) region for the 2021 monsoon season, processed by ASF.", "RTC products processed by ASF DAAC HyP3 2021 using GAMMA software. Contains modified Copernicus Sentinel data 2021, processed by ESA.", '', False, False, True, None, None, None, None)
# print('RTC Image Service updated.')

