# This script takes as input a geodatabase generated using the MDCS scripts
# and creates the necessary structure of mosaic datasets required for
# publishing services to ASF's Image Server.
# It then generates the draft service definition for each referenced MD,
# and stages a service definition.
#
# For each of the services to be published:
# 1. A derived mosaic dataset is generated by copying the source mosaic dataset
# 2. A referenced mosaic dataset is generated from the derived mosaic dataset
# 3. A draft service definition is generated from the referenced mosaic dataset
# 4. A final service definition is staged
#
# This script must be run on the input geodatabase after it has been uploaded to the server.

import tempfile

import arcpy

geodatabase = '/home/arcgis/RTCServices/RTCservices.gdb'
mosaics = [
    {
        'source_dataset': f'{geodatabase}/rgb',
        'derived_dataset': f'{geodatabase}/rgb_derived',
        'referenced_dataset': f'{geodatabase}/rgb_referenced',
        'service_name': 'ASF_S1_RGB',
        'service_definition': '/home/arcgis/RTCServices/ASF_S1_RGB.sd',
    },
    {
        'source_dataset': f'{geodatabase}/sar_comp',
        'derived_dataset': f'{geodatabase}/sar_comp_derived',
        'referenced_dataset': f'{geodatabase}/sar_comp_referenced',
        'service_name': 'ASF_S1_RTC',
        'service_definition': '/home/arcgis/RTCServices/ASF_S1_RTC.sd',
    },
    {
        'source_dataset': f'{geodatabase}/watermap_extent',
        'derived_dataset': f'{geodatabase}/watermap_extent_derived',
        'referenced_dataset': f'{geodatabase}/watermap_extent_referenced',
        'service_name': 'ASF_S1_WM',
        'service_definition': '/home/arcgis/RTCServices/ASF_S1_WM.sd',
    },
]

# Format source, derived and referenced mosaic datasets for each service
for mosaic in mosaics:
    print(f'Generating derived mosaic {mosaic["derived_dataset"]} from source mosaic {mosaic["source_dataset"]}')
    arcpy.management.Copy(mosaic['source_dataset'], mosaic['derived_dataset'])

    print(f'Generating referenced mosaic {mosaic["referenced_dataset"]} from derived mosaic {mosaic["derived_dataset"]}')
    arcpy.management.CreateReferencedMosaicDataset(mosaic['derived_dataset'], mosaic['referenced_dataset'],
                                                   'PROJCS["WGS_1984_Web_Mercator_Auxiliary_Sphere",'
                                                   'GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",'
                                                   'SPHEROID["WGS_1984",6378137.0,298.257223563]],'
                                                   'PRIMEM["Greenwich",0.0],'
                                                   'UNIT["Degree",0.0174532925199433]],'
                                                   'PROJECTION["Mercator_Auxiliary_Sphere"],'
                                                   'PARAMETER["False_Easting",0.0],'
                                                   'PARAMETER["False_Northing",0.0],'
                                                   'PARAMETER["Central_Meridian",0.0],'
                                                   'PARAMETER["Standard_Parallel_1",0.0],'
                                                   'PARAMETER["Auxiliary_Sphere_Type",0.0],'
                                                   'UNIT["Meter",1.0]]')

    # Generate service definition from the dataset
    with tempfile.NamedTemporaryFile(suffix='.sddraft') as sd_draft:
        print(f'Generating draft service definition for {mosaic["referenced_dataset"]}')
        arcpy.CreateImageSDDraft(mosaic['referenced_dataset'], sd_draft.name, mosaic['service_name'])

        print(f'Generating final service definition for {mosaic["referenced_dataset"]}')
        arcpy.server.StageService(sd_draft.name, mosaic['service_definition'])
